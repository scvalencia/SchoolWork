using gold.structures.automaton.*
using gold.visualization.automaton.*

procedure main(args:String[]) begin
	GAutomataFrame.show(createAutomaton())
end

function createAutomaton():IPushdownAutomaton begin
	Q := {"I",  "F",  "T"} ∪ {x | x ∈ (0‥5)}
	Σ := {'a', 'b'} ∪ {x | x ∈ ('0'‥'5')}
	Γ := {'a'}
	q₀ := "I"
	F := {"F"}
	M := GPushdownAutomaton(Q, Σ, Γ, q₀, F)
	
	// Estado actual,  estado siguiente,  caractér leido,  y operación sobre la pila
	
	M.delta("I", 0, "a").push("a")
	M.delta(0, 0, "a").push("a")
	
	M.delta(0, "T", λ).ignore()
	M.delta("T", "T", λ).pop("a")
	M.delta("T", "F", "0").ignore()
	
	/* 
	for each x in {1‥5} do
		M.delta(0,  x, "b" * x).pop("a")
		M.delta(1, x, "b" * x).pop("a")
		M.delta(x, "F", String.valueOf(x)).ignore()
	end
	*/

	M.delta(0,  1, "b").pop("a")
	M.delta(1, 1, "b").pop("a")
	M.delta(1, "F", "1").ignore()
	
	M.delta(0, 2, "bb").pop("a")
	M.delta(2, 2, "bb").pop("a")
	M.delta(2, "F", "2").ignore()
	
	M.delta(0, 3, "bbb").pop("a")
	M.delta(3, 3, "bbb").pop("a")
	M.delta(3, "F", "3").ignore()
	
	M.delta(0, 4, "bbbb").pop("a")
	M.delta(4, 4, "bbbb").pop("a")
	M.delta(4, "F", "4").ignore()

	M.delta(0, 5, "bbbbb").pop("a")
	M.delta(5, 5, "bbbbb").pop("a")
	M.delta(5, "F", "5").ignore()
		
	return M
	
end
